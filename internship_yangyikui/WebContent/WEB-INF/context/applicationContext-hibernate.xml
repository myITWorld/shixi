<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">



    <!-- ========================= GENERAL DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<context:property-placeholder location="classpath:*.properties"/>
	
	<bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="50"/>
        <property name="maxIdle" value="10"/>
        <property name="maxWait" value="10000"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
        <property name="logAbandoned" value="true"/>
        <property name="accessToUnderlyingConnectionAllowed" value="true"/>
    </bean>
     
     
 	<!-- DriverManagerDataSource is a local DataSource that works in any environment.
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />
 	-->
 	
	<!-- JNDI DataSource for JEE environments -->
	<!--
		<jee:jndi-lookup id="dataSource" jndi-name="${jdbc.jndi}" />
	-->	

 	
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="lobHandler">
			<ref bean="defaultLobHandler"/>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:com/zoomkey/internship/persistence/model/*.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
			</props>
		</property>
	</bean>
	
	<!--通用HibernateDAO-->
	<bean id="commonDao"	class="com.zoomkey.internship.persistence.dao.imp.HibernateFacadeDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
   <!--通用JdbcDAO-->
    <bean id="jdbcDao" class="com.zoomkey.internship.persistence.dao.imp.JdbcDAO">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
   <bean id="simpleJdbcTemplete" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
   		<constructor-arg ref="dataSource" />
   </bean>
    
   <!-- 提供大字段数据JDBC操作支持 --> 
	<!-- LobHandler for well-behaved JDBC drivers -->
	<!-- (simply delegating to corresponding PreparedStatement and ResultSet methods) -->
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

	<!-- LobHandler for Oracle JDBC drivers -->
	<!-- (refers to the NativeJdbcExtractor above to get access to native OracleConnections) -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
	</bean>
    <!-- NativeJdbcExtractor for the C3P0 connection pool above -->
	<!-- (just needed for oracleLobHandler) -->
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
			lazy-init="true"/>
			
	 
	 
  <!-- ************************************************************************************ -->
  <!-- ****************************			用户管理  	           ***************************** -->
  <!-- ************************************************************************************ -->
    <bean id="userDao" class="com.zoomkey.internship.persistence.dao.imp.UserDAO" parent="commonDao">  
        <property name="sessionFactory">  
         <ref bean="sessionFactory"/>  
        </property>  
    </bean>  
  <!-- ************************************************************************************ -->
  <!-- ****************************			版块管理  	           ***************************** -->
  <!-- ************************************************************************************ -->
	<bean id="sectionDao" class="com.zoomkey.internship.persistence.dao.imp.SectionDAO" parent="commonDao">
	      <property name="sessionFactory">  
         <ref bean="sessionFactory"/>  
         </property>  
	</bean>
  <!-- ************************************************************************************ -->
  <!-- ****************************			文章管理  	           ***************************** -->
  <!-- ************************************************************************************ -->
	<bean id="articleDao" class="com.zoomkey.internship.persistence.dao.imp.ArticleDAO" parent="commonDao">
	      <property name="sessionFactory">  
         <ref bean="sessionFactory"/>  
         </property>  
	</bean>
			
</beans>