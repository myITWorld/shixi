<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd ">

	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
  		   <!-- methods starting with 'save', 'update' or 'remove' use the default transaction settings -->  
         <tx:method name="opt*"     isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="save*"    isolation="DEFAULT" propagation="REQUIRED" />    
			<tx:method name="update*"  isolation="DEFAULT" propagation="REQUIRED" />    
			<tx:method name="delete*"  isolation="DEFAULT" propagation="REQUIRED" />    
			
         <!-- other methods are set to read only -->  
         <tx:method name="*" read-only="false"/> 
		</tx:attributes>
	</tx:advice>
	
	<!-- ensure that the above transactional advice runs for any execution
	of an operation defined by the FooService interface -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.zoomkey.internship.service.imp..*(..))"   advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 此句使aspectj可用，必需加入  -->
   <aop:aspectj-autoproxy/> 

   <!-- 业务类 -->
	
   <bean id="commonService"   class="com.zoomkey.internship.service.imp.CommonBO">
		<property name="commonDao">
			<ref bean="commonDao"/>
		</property>
	</bean>
	<bean id="deletableService"   class="com.zoomkey.internship.service.imp.DeletableBO" parent="commonService">
	</bean> 
	
	 
	 <!-- *****************				版块管理                    ********************** -->
	<!-- ************************************************************************************* -->
	<bean id="sectionService" class="com.zoomkey.internship.service.imp.SectionBO" parent="commonService">
    	<property name="sectionDao">
    	<ref bean="sectionDao"/>
    	</property>
    	<property name="userDao">  
         <ref bean="userDao"/>  
        </property>  
	 
    </bean>
    
   
    <!-- *****************				用户管理                    ********************** -->
	<!-- ************************************************************************************* -->
    <bean id="userInfoService" class="com.zoomkey.internship.service.imp.UserBO" parent="deletableService"> 
		 <property name="userDao">  
         <ref bean="userDao"/>  
        </property>  
      <property name="sectionDao">
    	<ref bean="sectionDao"/>
    	</property>
	 
	 </bean>
   
    <!-- *****************				文章管理                    ********************** -->
	<!-- ************************************************************************************* -->
    <bean id="articleService" class="com.zoomkey.internship.service.imp.ArticleBO" parent="deletableService"> 
		 <property name="articleDao">  
         <ref bean="articleDao"/>  
        </property>  
      <property name="sectionDao">
    	<ref bean="sectionDao"/>
    	</property>
    
	 
	 </bean>
   
  
</beans>